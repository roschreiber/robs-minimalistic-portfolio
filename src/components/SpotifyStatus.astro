---
import { Icon } from 'astro-icon/components';
---

<a id="spotify-status" target="_blank" class="flex w-72 select-none items-center justify-start gap-2 overflow-hidden rounded-lg border border-white border-opacity-20 p-3 2xl:w-80 2xl:gap-3" style="opacity: 1; transform: none;">
  <Icon name="tabler:brand-spotify-filled" class="h-5 w-5 saturate-0" />
  <p id="spotify-text" class="2xl:text-lg 3xl:text-xl">currently not listening...</p>
</a>

<script>
  import config from "../config/config";

  const discordID = config.discordID;
  const fetchSpotifyData = async () => {
    try {
      const response = await fetch(`https://api.lanyard.rest/v1/users/${discordID}`);
      const data = await response.json();
      return data.data.spotify;
    } catch (error) {
      console.error('Error fetching Spotify data:', error);
      return null;
    }
  };

  document.addEventListener('DOMContentLoaded', async () => {
    const spotifyStatus = document.getElementById('spotify-status') as HTMLAnchorElement;
    const spotifyText = document.getElementById('spotify-text');

    const updateSpotifyStatus = async () => {
      const spotifyData = await fetchSpotifyData();
      if (spotifyData && spotifyText && spotifyStatus) {
        spotifyText.innerHTML = `
          <div class="flex items-center gap-2">
            <img src="${spotifyData.album_art_url}" alt="${spotifyData.album}" class="h-10 w-10 rounded-lg">
            <div>
              <p class="text-lg font-semibold">${spotifyData.song}</p>
              <p class="text-sm text-gray-400">${spotifyData.artist}</p>
            </div>
          </div>
        `;
        spotifyStatus.href = `https://open.spotify.com/track/${spotifyData.track_id}`;
      } else if (spotifyText) {
        spotifyText.textContent = 'currently not listening...';
      }
    };

    updateSpotifyStatus();
    setInterval(updateSpotifyStatus, 60000); // Update every minute
  });
</script>